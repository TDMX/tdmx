<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 U (http://www.altova.com) by Peter (- privat -) -->
<xs:schema xmlns="urn:dao.application.console.tdmx.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:dao.application.console.tdmx.org" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>TDMX storage schema for admin console</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="caseinsensitivetext">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="text">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="EntityState">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ACTIVE"/>
			<xs:enumeration value="DELETED"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- ********************************************* -->
	<!--           USER STORAGE         -->
	<!-- ********************************************* -->
	<xs:element name="user-storage" type="UserStorage"/>
	<xs:complexType name="UserStorage">
		<xs:sequence>
			<xs:element name="user" type="AdminConsoleUser" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AdminConsoleUser">
		<xs:annotation>
			<xs:documentation>A User of the Admin Console</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="username" type="text"/>
			<xs:element name="password" type="text"/>
		</xs:sequence>
	</xs:complexType>
	<!-- ********************************************* -->
	<!--           AUDIT LOG STORAGE          -->
	<!-- ********************************************* -->
	<xs:element name="audit-log-storage" type="AuditLogStorage"/>
	<xs:complexType name="AuditLogStorage">
		<xs:sequence>
			<xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="AuditLog"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AuditLog">
		<xs:sequence>
			<xs:element name="timestamp" type="xs:dateTime"/>
			<xs:element name="username" type="text"/>
			<xs:element name="operation" type="text"/>
			<xs:element name="reference" type="text"/>
			<xs:element name="description" type="text"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required">
			<xs:annotation>
				<xs:documentation>id of ths entry.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="prevId" use="required">
			<xs:annotation>
				<xs:documentation>previous log entry id. On startup prevId == id. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="mac" use="required">
			<xs:annotation>
				<xs:documentation>hmac or mac of the id+prevId+log entries</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- ********************************************* -->
	<!--           SERVICEPROVIDER STORAGE       -->
	<!-- ********************************************* -->
	<xs:element name="serviceprovider-storage" type="ServiceProviderStorage"/>
	<xs:complexType name="ServiceProviderStorage">
		<xs:annotation>
			<xs:documentation>Top Level Container for ServiceProvider Storage.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="system" type="RuntimeSystem" minOccurs="0"/>
			<xs:element name="x509-certificate" type="X509Certificate" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="rootca-list" type="RootCA-List" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="dnsresolver-list" type="DNSResolver-List" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="serviceprovider" type="ServiceProvider" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RuntimeSystem">
		<xs:sequence>
			<xs:element name="property" type="Property" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>system properties affecting networking and security.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Property">
		<xs:sequence>
			<xs:element name="name" type="xs:string" default="MAJORITY_WITHOUT_CONFLICT">
				<xs:annotation>
					<xs:documentation>property name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="value" type="xs:string">
				<xs:annotation>
					<xs:documentation>property value</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DNSResolver-List">
		<xs:annotation>
			<xs:documentation>A named list of DNS resolvers.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>the name of the list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="state" type="EntityState" minOccurs="0">
				<xs:annotation>
					<xs:documentation>a DNSResolver list can be enabled or not. Only DNS answers from enabled lists are combined by a policy to determine trust in the DNS information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="resolver-ip" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An ordered list of DNS resolver IP addresses. The DNS resolvers must support TCP. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required">
			<xs:annotation>
				<xs:documentation>the id of the DNSResolver list.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="X509Certificate">
		<xs:annotation>
			<xs:documentation>A X509 certificate</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="pem-value" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required">
			<xs:annotation>
				<xs:documentation>the SHA1 fingerprint as HEX.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RootCA-List">
		<xs:annotation>
			<xs:documentation>A named trusted and distrusted list of RootCAs.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>the name of the list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="state" type="EntityState" minOccurs="0">
				<xs:annotation>
					<xs:documentation>a RootCA list can be enabled or not. Only enabled lists are  combined wihout preference into the "effective" RootCA list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="trusted" type="RootCA-ListEntry" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>trusted root or intermediate CA certificates.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="distrusted" type="RootCA-ListEntry" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>distrusted certificates.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required">
			<xs:annotation>
				<xs:documentation>the id of the RootCA list.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RootCA-ListEntry">
		<xs:annotation>
			<xs:documentation>A RootCA list entry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="x509-certificate-id" type="xs:ID">
				<xs:annotation>
					<xs:documentation>the SHA1 hex fingerprint of the X509 certificate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="friendlyName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the friendly-name of the certificate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="state" type="EntityState" minOccurs="0">
				<xs:annotation>
					<xs:documentation>whether the certificate is currently in the list or not.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="addedDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the date the certificate was added to the list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="addedBy" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the username who added the certificate to the list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="deletedDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the date the certificate is deleted from the list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="deletedBy" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the username who performed the delete.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comment" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>additional information. Can give extended error information pertaining to the reason a certificate is revoked - fraudulent / untrusted.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EndPoint">
		<xs:annotation>
			<xs:documentation>An API Endpoint Address</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="hostname" type="caseinsensitivetext"/>
			<xs:element name="port" type="xs:unsignedShort"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceProvider">
		<xs:annotation>
			<xs:documentation>A ServiceProvider.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="subject-identity" type="text" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the X.509 Subject (identity) of the ServiceProvider. This must be the same for all certificates served by the ServiceProvider's APIs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="api-version" type="xs:unsignedShort">
				<xs:annotation>
					<xs:documentation>the TDMX version used for all entities and APIs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mas" type="EndPoint">
				<xs:annotation>
					<xs:documentation>the hostname and port of the ServiceProvider's Message Administration Service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mrs" type="EndPoint" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the hostname and port of the ServiceProvider's Message Relay Service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mos" type="EndPoint" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the hostname and port of the ServiceProvider's Message Origination Service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mds" type="EndPoint" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the hostname and port of the ServiceProvider's Message Destination Service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="domain" type="Domain" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>the own domains managed at the ServiceProvder.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required"/>
	</xs:complexType>
	<xs:complexType name="Domain">
		<xs:annotation>
			<xs:documentation>A Domain.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="domainname" type="caseinsensitivetext"/>
			<xs:element name="certificate" type="Certificate" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="service" type="Service" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="address" type="Address" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="zone" type="IPZone" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="channel" type="Channel" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Address">
		<xs:annotation>
			<xs:documentation>A Domain Address.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="text"/>
			<xs:element name="user" type="User" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IPZone">
		<xs:annotation>
			<xs:documentation>A IP-Address list defining a Zone.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="text"/>
			<xs:element name="ip-address" type="text" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Certificate">
		<xs:annotation>
			<xs:documentation>A DomainCertificate.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="alias" type="text"/>
			<xs:element name="state" type="EntityState"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="User">
		<xs:annotation>
			<xs:documentation>A User.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="alias" type="text"/>
			<xs:element name="state" type="EntityState"/>
			<xs:element name="ip-zone-name" type="text" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ip-address" type="text" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Service">
		<xs:annotation>
			<xs:documentation>A Service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="text"/>
			<xs:element name="default-max-concurrency" type="xs:unsignedShort"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Channel">
		<xs:annotation>
			<xs:documentation>A Channel.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="origin-domainname" type="caseinsensitivetext"/>
			<xs:element name="origin-service-provider" type="text"/>
			<xs:element name="origin-address" type="text"/>
			<xs:element name="destination-service-provider" type="caseinsensitivetext"/>
			<xs:element name="destination-domain" type="text"/>
			<xs:element name="destination-service" type="text"/>
			<xs:element name="destination-address" type="text"/>
			<xs:element name="default-flow-limit"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
