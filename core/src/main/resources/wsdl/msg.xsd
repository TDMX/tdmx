<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 U (http://www.altova.com) by Peter (- privat -) -->
<xs:schema xmlns="urn:tdmx:api:v1.0:sp:msg" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:common="urn:tdmx:api:v1.0:sp:common" targetNamespace="urn:tdmx:api:v1.0:sp:msg" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="urn:tdmx:api:v1.0:sp:common" schemaLocation="common.xsd"/>
	<xs:annotation>
		<xs:documentation>Message related types for TDMX ServiceProvider API</xs:documentation>
	</xs:annotation>
	<!-- ********************************************* -->
	<!--           TYPES            -->
	<!-- ********************************************* -->
	<xs:complexType name="DomainFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Domains</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="domain" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AdministratorFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Administrators.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="administratorIdentity" minOccurs="0"/>
			<xs:element ref="domain" minOccurs="0"/>
			<xs:element name="status" type="credentialStatus" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Address">
		<xs:annotation>
			<xs:documentation>An Address.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="localname"/>
			<xs:element ref="domain"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AddressFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Addresses.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="localname" minOccurs="0"/>
			<xs:element ref="domain" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Service">
		<xs:annotation>
			<xs:documentation>A Service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="servicename"/>
			<xs:element ref="domain"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceState">
		<xs:annotation>
			<xs:documentation>State information related to a Service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="service"/>
			<xs:element name="concurrencyLimit" type="xs:unsignedShort">
				<xs:annotation>
					<xs:documentation>the default receive concurrency limit per target.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Services.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="servicename" minOccurs="0"/>
			<xs:element ref="domain" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IpZone">
		<xs:sequence>
			<xs:element name="name" type="ipzonename"/>
			<xs:element name="ipaddress" type="ipaddress" maxOccurs="256"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IpAddressList">
		<xs:sequence>
			<xs:element ref="ipaddress" minOccurs="0" maxOccurs="255"/>
			<xs:element ref="ipzone" minOccurs="0" maxOccurs="64"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AdministratorIdentity">
		<xs:sequence>
			<xs:element ref="domaincertificate"/>
			<xs:element ref="rootcertificate"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Administrator">
		<xs:sequence>
			<xs:element ref="administratorIdentity"/>
			<xs:element name="status" type="credentialStatus"/>
			<xs:element name="whitelist" type="IpAddressList"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserIdentity">
		<xs:sequence>
			<xs:element ref="usercertificate"/>
			<xs:element ref="domaincertificate"/>
			<xs:element ref="rootcertificate"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="User">
		<xs:sequence>
			<xs:element ref="userIdentity"/>
			<xs:element name="status" type="credentialStatus"/>
			<xs:element name="whitelist" type="IpAddressList"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Users.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="userIdentity" minOccurs="0"/>
			<xs:element ref="localname" minOccurs="0"/>
			<xs:element ref="domain" minOccurs="0"/>
			<xs:element name="status" type="credentialStatus" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelEndpoint">
		<xs:complexContent>
			<xs:extension base="Address"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChannelEndpointFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Channel Origins.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="localname" minOccurs="0"/>
			<xs:element ref="domain" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelDestination">
		<xs:complexContent>
			<xs:extension base="ChannelEndpoint">
				<xs:sequence>
					<xs:element ref="servicename"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChannelDestinationFilter">
		<xs:complexContent>
			<xs:extension base="ChannelEndpointFilter">
				<xs:sequence>
					<xs:element ref="servicename" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Channel">
		<xs:annotation>
			<xs:documentation>A directed communication path for messages between two Addresses via a Service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="origin"/>
			<xs:element ref="destination"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelFilter">
		<xs:annotation>
			<xs:documentation>A filter criteria for searching for Channels.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="domain" minOccurs="0"/>
			<xs:element name="origin" type="ChannelEndpointFilter" minOccurs="0"/>
			<xs:element name="destination" type="ChannelDestinationFilter" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelEndpointAuthorization">
		<xs:complexContent>
			<xs:extension base="Channel">
				<xs:sequence>
					<xs:element ref="permission"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EndpointPermission">
		<xs:annotation>
			<xs:documentation>A DomainAdministrator provides and certifies a channel endpoint authorization. Signature fields are { origin.{ localname + domain + serviceprovider } + destination.{serviceName + localname + domain + serviceprovider } + permission + maxPlaintextSize + notValidAfter + admin.pem + timestamp }</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="permission" type="grant"/>
			<xs:element name="maxPlaintextSizeBytes" type="xs:unsignedLong"/>
			<xs:element name="validUntil" type="xs:date">
				<xs:annotation>
					<xs:documentation>the time at which the authorization is revoked. An authorization is valid for at most 1 year duration, which is required to handle DNS ownership changes (and whois expiration info not authoritative), whilst having long validity durations of clients.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="administratorsignature"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RequestedChannelAuthorization">
		<xs:sequence>
			<xs:element name="origin" type="EndpointPermission" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the authorization of the origin.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="destination" type="EndpointPermission" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the authorization of the destination. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CurrentChannelAuthorization">
		<xs:sequence>
			<xs:element ref="channel"/>
			<xs:element name="origin" type="EndpointPermission" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the authorization of the origin.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="destination" type="EndpointPermission" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the authorization of the destination. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="limit" type="FlowControlLimit">
				<xs:annotation>
					<xs:documentation>the default flow control limit which is initially applied to all flows created in the channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="administratorsignature"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelAuthorization">
		<xs:sequence>
			<xs:element ref="domain"/>
			<xs:element name="current" type="CurrentChannelAuthorization">
				<xs:annotation>
					<xs:documentation>the current authorization of the channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unconfirmed" type="RequestedChannelAuthorization">
				<xs:annotation>
					<xs:documentation>the yet to be confirmed authorization of the channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="common:processingstatus"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelAuthorizationFilter">
		<xs:complexContent>
			<xs:extension base="ChannelFilter">
				<xs:sequence>
					<xs:element name="unconfirmedFlag" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>whether the channel has unconfirmed authorization changes.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChannelFlow">
		<xs:sequence>
			<xs:element ref="channelauthorization"/>
			<xs:element name="status" type="FlowStatus">
				<xs:annotation>
					<xs:documentation>the current flow control status.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="level" type="FlowControlLevel">
				<xs:annotation>
					<xs:documentation>the current flow control levels.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="limit" type="FlowControlLimit">
				<xs:annotation>
					<xs:documentation>the flow control limits for high mark and low mark set by channel authorization affects all flows.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="sessioninfo" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlowControlLimit">
		<xs:sequence>
			<xs:element name="unsentBuffer" type="Limit" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the buffer limits for messages sent but not yet relayed to the receiving side of the flow.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="undeliveredBuffer" type="Limit" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the buffer limits for messags not yet delivered to receivers on the receiving side of the flow.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlowStatus">
		<xs:sequence>
			<xs:element name="senderStatus" type="flowcontrolstatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>On the sender side, this is determined by the unsentBuffer quota.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="receiverStatus" type="flowcontrolstatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>On the sender side, this represents the status of relaying to the receiver side. as communicated by the receiver. On the receiver side it is determined by the undeliveredBuffer.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlowControlLevel">
		<xs:sequence>
			<xs:element name="unsentBuffer" type="xs:unsignedLong" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the sum of the size of payloads in the unsentBuffer. Only availible on the sender side of the flow.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="undeliveredBuffer" type="xs:unsignedLong" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the sum of the size of payloads in the undeliveredBuffer. Only availible on the receiver side of the flow.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Destination">
		<xs:annotation>
			<xs:documentation>a DestinationSession linked to a Service at an Address.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="destination"/>
			<xs:element ref="destinationsession"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DestinationSession">
		<xs:annotation>
			<xs:documentation>flowtargetsession is signed by the flow's target user and contains { channel.destination.Address+DomainName+serviceName +  flowsessionId + sessionKey+validFrom+scheme  + signaturevalue.timestamp</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="encryptionContextId"/>
			<xs:element name="scheme" type="cryptoscheme"/>
			<xs:element name="sessionKey" type="xs:base64Binary"/>
			<xs:element ref="usersignature"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelDestinationSession">
		<xs:sequence>
			<xs:element ref="destinationsession"/>
			<xs:element ref="common:processingstatus"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserSignature">
		<xs:sequence>
			<xs:element ref="userIdentity"/>
			<xs:element ref="signaturevalue"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="usersignature" type="UserSignature"/>
	<xs:complexType name="AdministratorSignature">
		<xs:sequence>
			<xs:element ref="administratorIdentity"/>
			<xs:element ref="signaturevalue"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignatureValue">
		<xs:sequence>
			<xs:element name="timestamp" type="timestamp">
				<xs:annotation>
					<xs:documentation>signature timestamp - accurate to seconds.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="signature" type="signature">
				<xs:annotation>
					<xs:documentation>hex value of the signature.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="signatureAlgorithm" type="signatureAlgorithm">
				<xs:annotation>
					<xs:documentation>the signature algorithm.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="signaturevalue" type="SignatureValue"/>
	<xs:element name="administratorsignature" type="AdministratorSignature">
		<xs:annotation>
			<xs:documentation>digital signature created by a domain administrator.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="Limit">
		<xs:annotation>
			<xs:documentation>A directed communication path for messages between two Addresses via a Service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="highBytes" type="xs:unsignedLong"/>
			<xs:element name="lowBytes" type="xs:unsignedLong"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="localname">
		<xs:restriction base="common:text"/>
	</xs:simpleType>
	<xs:simpleType name="domainname">
		<xs:restriction base="common:text"/>
	</xs:simpleType>
	<xs:simpleType name="servicename">
		<xs:restriction base="common:text"/>
	</xs:simpleType>
	<xs:simpleType name="ipzonename">
		<xs:restriction base="xs:short"/>
	</xs:simpleType>
	<xs:simpleType name="ipaddress">
		<xs:annotation>
			<xs:documentation>an IPv4 or IPv6 address range in CIDR format.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:short"/>
	</xs:simpleType>
	<xs:simpleType name="cryptoscheme">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="x509certificate">
		<xs:restriction base="xs:base64Binary"/>
	</xs:simpleType>
	<xs:simpleType name="credentialStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ACTIVE"/>
			<xs:enumeration value="SUSPENDED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="signature">
		<xs:restriction base="xs:string">
			<xs:maxLength value="128"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="signatureAlgorithm">
		<xs:restriction base="xs:string">
			<xs:enumeration value="SHA256withRSA"/>
			<xs:enumeration value="SHA384withRSA"/>
			<xs:enumeration value="SHA512withRSA"/>
			<xs:enumeration value="SHA256withECDSA"/>
			<xs:enumeration value="SHA384withECDSA"/>
			<xs:enumeration value="SHA512withECDSA"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="timestamp">
		<xs:restriction base="xs:dateTime"/>
	</xs:simpleType>
	<xs:simpleType name="flowcontrolstatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="OPEN"/>
			<xs:enumeration value="CLOSED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="url">
		<xs:restriction base="common:text"/>
	</xs:simpleType>
	<xs:element name="localname" type="localname"/>
	<xs:element name="domain" type="domainname"/>
	<xs:element name="address" type="Address"/>
	<xs:element name="origin" type="ChannelEndpoint"/>
	<xs:element name="destination" type="ChannelDestination"/>
	<xs:element name="serviceprovider" type="url"/>
	<xs:element name="servicename" type="servicename"/>
	<xs:element name="service" type="Service"/>
	<xs:element name="ipaddress" type="ipaddress">
		<xs:annotation>
			<xs:documentation>a whitelisted IP address range, either IPv4 or IPv6 in CIDR notation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ipzone" type="ipzonename"/>
	<xs:element name="channel" type="Channel"/>
	<xs:element name="channelinfo" type="ChannelFlow"/>
	<xs:element name="destinationinfo" type="Destination"/>
	<xs:element name="sessioninfo" type="ChannelDestinationSession"/>
	<xs:element name="rootcertificate" type="x509certificate"/>
	<xs:element name="domaincertificate" type="x509certificate"/>
	<xs:element name="usercertificate" type="x509certificate"/>
	<xs:element name="administratorIdentity" type="AdministratorIdentity">
		<xs:annotation>
			<xs:documentation>exact public credentials of a single DAC.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="administrator" type="Administrator"/>
	<xs:element name="userIdentity" type="UserIdentity"/>
	<xs:element name="user" type="User"/>
	<xs:element name="encryptionContextId" type="common:text">
		<xs:annotation>
			<xs:documentation>an identifier of the encryption context known by the receiver.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="destinationsession" type="DestinationSession">
		<xs:annotation>
			<xs:documentation>the destination's encryption context.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="channelauthorization" type="ChannelAuthorization">
		<xs:annotation>
			<xs:documentation>a channel authorization.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="currentchannelauthorization" type="CurrentChannelAuthorization">
		<xs:annotation>
			<xs:documentation>a channel authorization.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="authorization" type="ChannelEndpointAuthorization">
		<xs:annotation>
			<xs:documentation>a channel endpoint authorization.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="permission" type="EndpointPermission"/>
	<!-- ********************************************* -->
	<!--           DESTINATION TYPES              -->
	<!-- ********************************************* -->
	<xs:complexType name="NonTransactionalSession">
		<xs:sequence>
			<xs:element ref="sessionid"/>
			<xs:element name="timeout" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>the time after which unacknowledged previously received messages are freed to be delivered again.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="receiptsignature" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="sessionId">
		<xs:restriction base="common:text"/>
	</xs:simpleType>
	<xs:element name="sessionid" type="sessionId">
		<xs:annotation>
			<xs:documentation>Session Identifier.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="session" type="NonTransactionalSession">
		<xs:annotation>
			<xs:documentation>A receiver which does not use distributed transactionality uses an auto acknowledging session. If it is not the first call of the session, the delivery receipt of the previously received message must be provided. A delivery receipt can be provided also separately without risking receiving a new message if the timeout is -1.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="waitTimeout" type="xs:unsignedShort">
		<xs:annotation>
			<xs:documentation>the maximum time which the call will block in seconds at the ServiceProvider waiting for messages ready to deliver.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="retryCount" type="xs:unsignedShort">
		<xs:annotation>
			<xs:documentation>the number of times the delivery was retried due to rollback.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- ********************************************* -->
	<!--           MESSAGING TYPES              -->
	<!-- ********************************************* -->
	<xs:complexType name="Header">
		<xs:sequence>
			<xs:element ref="msgId"/>
			<xs:element name="ttl" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>timestamp after which message is assumed not delivered if no reply received, and shall not be delivered by the destination.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="channel"/>
			<xs:element name="to" type="UserIdentity">
				<xs:annotation>
					<xs:documentation>the public certificate of the receiver.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="encryptionContextId"/>
			<xs:element name="payloadSignature" type="signature">
				<xs:annotation>
					<xs:documentation>the signature value of the Message's payload element fields, including a MACofMACs of all the chunks of the ciphertext. Note that there is a cryptographically secure digital signature of the message payload typically in the encryption scheme ( on the payload plaintext ). The payloadSignature issuer is the that of the header signature issuer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalReference" type="common:longtext" minOccurs="0">
				<xs:annotation>
					<xs:documentation>plaintext reference provided by the originator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="usersignature"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Payload">
		<xs:sequence>
			<xs:element name="chunkSize" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>chunk size in bytes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="length" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>the total bytes of the payload - ( encrypted, zipped ) - equal to the sum of all payload chunk lengths.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="encryptionContext" type="xs:base64Binary">
				<xs:annotation>
					<xs:documentation>supplementary data supplied by the encrypting crypto scheme. Used to facilitate the crypto scheme's decryption primitive.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="plaintextLength" type="xs:unsignedInt">
				<xs:annotation>
					<xs:documentation>the size in bytes of the plaiintext ( decrypted, uncompressed ) - known in advance so as to allow safe decompression.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MACofMACs" type="crc32concatenation">
				<xs:annotation>
					<xs:documentation>SHA256 MAC of all chunk's MAC.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Message">
		<xs:sequence>
			<xs:element ref="header"/>
			<xs:element ref="payload"/>
			<xs:element ref="chunk"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Chunk">
		<xs:complexContent>
			<xs:extension base="ChunkReference">
				<xs:sequence>
					<xs:element ref="data"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChunkReference">
		<xs:annotation>
			<xs:documentation>The reference to a chunk.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="msgId" type="messageId" use="required"/>
		<xs:attribute name="pos" type="xs:unsignedShort" use="required"/>
		<xs:attribute name="mac" type="mac" use="required"/>
	</xs:complexType>
	<xs:complexType name="DeliveryReport">
		<xs:sequence>
			<xs:element ref="header"/>
			<xs:element ref="receiptsignature" minOccurs="0"/>
			<xs:element ref="common:processingstatus" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="mac">
		<xs:annotation>
			<xs:documentation>Message Authentication Code - SHA1.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="crc32">
		<xs:annotation>
			<xs:documentation>CRC32 (32-bit) as hex chars.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="crc32concatenation">
		<xs:annotation>
			<xs:documentation>A concatenation of up to 1000 CRC32 checksums.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="8"/>
			<xs:maxLength value="8000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="messageId">
		<xs:annotation>
			<xs:documentation>a SHA-256 fingerprint.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="common:text">
			<xs:maxLength value="64"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="grant">
		<xs:annotation>
			<xs:documentation>Permission ALLOW or DENY.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ALLOW"/>
			<xs:enumeration value="DENY"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="msg" type="Message">
		<xs:annotation>
			<xs:documentation>A message.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="header" type="Header"/>
	<xs:element name="msgId" type="messageId">
		<xs:annotation>
			<xs:documentation>the SHA-256 fingerprint of { timestamp+source.credential+target.credential+serviceName + send/+recvAuthorizationSignature +payloadSignature }</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="payload" type="Payload"/>
	<xs:element name="chunk" type="Chunk">
		<xs:annotation>
			<xs:documentation>A message payload chunk.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="chunkref" type="ChunkReference">
		<xs:annotation>
			<xs:documentation>A message payload chunk.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="data" type="xs:base64Binary"/>
	<xs:element name="receiptsignature" type="UserSignature">
		<xs:annotation>
			<xs:documentation>The signature of receipt by the target user. All the message header fields are signed by the receiptsignature.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="dr" type="DeliveryReport">
		<xs:annotation>
			<xs:documentation>The message delivery report.</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>
