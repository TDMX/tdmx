// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pcs-server.proto

package org.tdmx.server.pcs.protobuf;

public final class PCSServer {
  private PCSServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Ping)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Ping> {

    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo + payload data must be echoed back
     * </pre>
     */
    boolean hasSequenceNo();
    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo + payload data must be echoed back
     * </pre>
     */
    int getSequenceNo();

    /**
     * <code>required bytes pingPayload = 2;</code>
     */
    boolean hasPingPayload();
    /**
     * <code>required bytes pingPayload = 2;</code>
     */
    com.google.protobuf.ByteString getPingPayload();

    /**
     * <code>optional int32 pingDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the ping call at server ( prior to pong )
     * </pre>
     */
    boolean hasPingDurationMs();
    /**
     * <code>optional int32 pingDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the ping call at server ( prior to pong )
     * </pre>
     */
    int getPingDurationMs();

    /**
     * <code>optional bool pingPercentComplete = 4;</code>
     *
     * <pre>
     * whether the server shall provide percent complete indication back to client during ping. 
     * </pre>
     */
    boolean hasPingPercentComplete();
    /**
     * <code>optional bool pingPercentComplete = 4;</code>
     *
     * <pre>
     * whether the server shall provide percent complete indication back to client during ping. 
     * </pre>
     */
    boolean getPingPercentComplete();

    /**
     * <code>optional bool pongRequired = 5;</code>
     *
     * <pre>
     * whether the ping call shall reverse pong the pinging client
     * </pre>
     */
    boolean hasPongRequired();
    /**
     * <code>optional bool pongRequired = 5;</code>
     *
     * <pre>
     * whether the ping call shall reverse pong the pinging client
     * </pre>
     */
    boolean getPongRequired();

    /**
     * <code>optional bool pongBlocking = 6;</code>
     *
     * <pre>
     * whether to call a clients blocking pong service or nonblocking pong service.
     * </pre>
     */
    boolean hasPongBlocking();
    /**
     * <code>optional bool pongBlocking = 6;</code>
     *
     * <pre>
     * whether to call a clients blocking pong service or nonblocking pong service.
     * </pre>
     */
    boolean getPongBlocking();

    /**
     * <code>optional int32 pongDurationMs = 7;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    boolean hasPongDurationMs();
    /**
     * <code>optional int32 pongDurationMs = 7;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    int getPongDurationMs();

    /**
     * <code>optional int32 pongTimeoutMs = 8;</code>
     *
     * <pre>
     * the timeout of the pong call at the server
     * </pre>
     */
    boolean hasPongTimeoutMs();
    /**
     * <code>optional int32 pongTimeoutMs = 8;</code>
     *
     * <pre>
     * the timeout of the pong call at the server
     * </pre>
     */
    int getPongTimeoutMs();

    /**
     * <code>optional bool pongPercentComplete = 9;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong.
     * </pre>
     */
    boolean hasPongPercentComplete();
    /**
     * <code>optional bool pongPercentComplete = 9;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong.
     * </pre>
     */
    boolean getPongPercentComplete();
  }
  /**
   * Protobuf type {@code Ping}
   *
   * <pre>
   * the Ping message provides the server with all the information it needs to perform the Pong
   * so the pinging client controls the entire operation of the server remotely.
   * </pre>
   */
  public static final class Ping extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Ping> implements
      // @@protoc_insertion_point(message_implements:Ping)
      PingOrBuilder {
    // Use Ping.newBuilder() to construct.
    private Ping(com.google.protobuf.GeneratedMessage.ExtendableBuilder<org.tdmx.server.pcs.protobuf.PCSServer.Ping, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Ping(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Ping defaultInstance;
    public static Ping getDefaultInstance() {
      return defaultInstance;
    }

    public Ping getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Ping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceNo_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              pingPayload_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pingDurationMs_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pingPercentComplete_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              pongRequired_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              pongBlocking_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              pongDurationMs_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              pongTimeoutMs_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              pongPercentComplete_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Ping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Ping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tdmx.server.pcs.protobuf.PCSServer.Ping.class, org.tdmx.server.pcs.protobuf.PCSServer.Ping.Builder.class);
    }

    public static com.google.protobuf.Parser<Ping> PARSER =
        new com.google.protobuf.AbstractParser<Ping>() {
      public Ping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ping(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Ping> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQUENCENO_FIELD_NUMBER = 1;
    private int sequenceNo_;
    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo + payload data must be echoed back
     * </pre>
     */
    public boolean hasSequenceNo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo + payload data must be echoed back
     * </pre>
     */
    public int getSequenceNo() {
      return sequenceNo_;
    }

    public static final int PINGPAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString pingPayload_;
    /**
     * <code>required bytes pingPayload = 2;</code>
     */
    public boolean hasPingPayload() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes pingPayload = 2;</code>
     */
    public com.google.protobuf.ByteString getPingPayload() {
      return pingPayload_;
    }

    public static final int PINGDURATIONMS_FIELD_NUMBER = 3;
    private int pingDurationMs_;
    /**
     * <code>optional int32 pingDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the ping call at server ( prior to pong )
     * </pre>
     */
    public boolean hasPingDurationMs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 pingDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the ping call at server ( prior to pong )
     * </pre>
     */
    public int getPingDurationMs() {
      return pingDurationMs_;
    }

    public static final int PINGPERCENTCOMPLETE_FIELD_NUMBER = 4;
    private boolean pingPercentComplete_;
    /**
     * <code>optional bool pingPercentComplete = 4;</code>
     *
     * <pre>
     * whether the server shall provide percent complete indication back to client during ping. 
     * </pre>
     */
    public boolean hasPingPercentComplete() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool pingPercentComplete = 4;</code>
     *
     * <pre>
     * whether the server shall provide percent complete indication back to client during ping. 
     * </pre>
     */
    public boolean getPingPercentComplete() {
      return pingPercentComplete_;
    }

    public static final int PONGREQUIRED_FIELD_NUMBER = 5;
    private boolean pongRequired_;
    /**
     * <code>optional bool pongRequired = 5;</code>
     *
     * <pre>
     * whether the ping call shall reverse pong the pinging client
     * </pre>
     */
    public boolean hasPongRequired() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool pongRequired = 5;</code>
     *
     * <pre>
     * whether the ping call shall reverse pong the pinging client
     * </pre>
     */
    public boolean getPongRequired() {
      return pongRequired_;
    }

    public static final int PONGBLOCKING_FIELD_NUMBER = 6;
    private boolean pongBlocking_;
    /**
     * <code>optional bool pongBlocking = 6;</code>
     *
     * <pre>
     * whether to call a clients blocking pong service or nonblocking pong service.
     * </pre>
     */
    public boolean hasPongBlocking() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool pongBlocking = 6;</code>
     *
     * <pre>
     * whether to call a clients blocking pong service or nonblocking pong service.
     * </pre>
     */
    public boolean getPongBlocking() {
      return pongBlocking_;
    }

    public static final int PONGDURATIONMS_FIELD_NUMBER = 7;
    private int pongDurationMs_;
    /**
     * <code>optional int32 pongDurationMs = 7;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    public boolean hasPongDurationMs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 pongDurationMs = 7;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    public int getPongDurationMs() {
      return pongDurationMs_;
    }

    public static final int PONGTIMEOUTMS_FIELD_NUMBER = 8;
    private int pongTimeoutMs_;
    /**
     * <code>optional int32 pongTimeoutMs = 8;</code>
     *
     * <pre>
     * the timeout of the pong call at the server
     * </pre>
     */
    public boolean hasPongTimeoutMs() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 pongTimeoutMs = 8;</code>
     *
     * <pre>
     * the timeout of the pong call at the server
     * </pre>
     */
    public int getPongTimeoutMs() {
      return pongTimeoutMs_;
    }

    public static final int PONGPERCENTCOMPLETE_FIELD_NUMBER = 9;
    private boolean pongPercentComplete_;
    /**
     * <code>optional bool pongPercentComplete = 9;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong.
     * </pre>
     */
    public boolean hasPongPercentComplete() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool pongPercentComplete = 9;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong.
     * </pre>
     */
    public boolean getPongPercentComplete() {
      return pongPercentComplete_;
    }

    private void initFields() {
      sequenceNo_ = 0;
      pingPayload_ = com.google.protobuf.ByteString.EMPTY;
      pingDurationMs_ = 0;
      pingPercentComplete_ = false;
      pongRequired_ = false;
      pongBlocking_ = false;
      pongDurationMs_ = 0;
      pongTimeoutMs_ = 0;
      pongPercentComplete_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSequenceNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPingPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.tdmx.server.pcs.protobuf.PCSServer.Ping>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sequenceNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, pingPayload_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pingDurationMs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, pingPercentComplete_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, pongRequired_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, pongBlocking_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, pongDurationMs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, pongTimeoutMs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, pongPercentComplete_);
      }
      extensionWriter.writeUntil(1000, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sequenceNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, pingPayload_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pingDurationMs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, pingPercentComplete_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, pongRequired_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, pongBlocking_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pongDurationMs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pongTimeoutMs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, pongPercentComplete_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.tdmx.server.pcs.protobuf.PCSServer.Ping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Ping}
     *
     * <pre>
     * the Ping message provides the server with all the information it needs to perform the Pong
     * so the pinging client controls the entire operation of the server remotely.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.tdmx.server.pcs.protobuf.PCSServer.Ping, Builder> implements
        // @@protoc_insertion_point(builder_implements:Ping)
        org.tdmx.server.pcs.protobuf.PCSServer.PingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Ping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Ping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tdmx.server.pcs.protobuf.PCSServer.Ping.class, org.tdmx.server.pcs.protobuf.PCSServer.Ping.Builder.class);
      }

      // Construct using org.tdmx.server.pcs.protobuf.PCSServer.Ping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pingPayload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        pingDurationMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        pingPercentComplete_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        pongRequired_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        pongBlocking_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        pongDurationMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        pongTimeoutMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        pongPercentComplete_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Ping_descriptor;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Ping getDefaultInstanceForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.Ping.getDefaultInstance();
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Ping build() {
        org.tdmx.server.pcs.protobuf.PCSServer.Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Ping buildPartial() {
        org.tdmx.server.pcs.protobuf.PCSServer.Ping result = new org.tdmx.server.pcs.protobuf.PCSServer.Ping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceNo_ = sequenceNo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pingPayload_ = pingPayload_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pingDurationMs_ = pingDurationMs_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pingPercentComplete_ = pingPercentComplete_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pongRequired_ = pongRequired_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pongBlocking_ = pongBlocking_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pongDurationMs_ = pongDurationMs_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pongTimeoutMs_ = pongTimeoutMs_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pongPercentComplete_ = pongPercentComplete_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tdmx.server.pcs.protobuf.PCSServer.Ping) {
          return mergeFrom((org.tdmx.server.pcs.protobuf.PCSServer.Ping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tdmx.server.pcs.protobuf.PCSServer.Ping other) {
        if (other == org.tdmx.server.pcs.protobuf.PCSServer.Ping.getDefaultInstance()) return this;
        if (other.hasSequenceNo()) {
          setSequenceNo(other.getSequenceNo());
        }
        if (other.hasPingPayload()) {
          setPingPayload(other.getPingPayload());
        }
        if (other.hasPingDurationMs()) {
          setPingDurationMs(other.getPingDurationMs());
        }
        if (other.hasPingPercentComplete()) {
          setPingPercentComplete(other.getPingPercentComplete());
        }
        if (other.hasPongRequired()) {
          setPongRequired(other.getPongRequired());
        }
        if (other.hasPongBlocking()) {
          setPongBlocking(other.getPongBlocking());
        }
        if (other.hasPongDurationMs()) {
          setPongDurationMs(other.getPongDurationMs());
        }
        if (other.hasPongTimeoutMs()) {
          setPongTimeoutMs(other.getPongTimeoutMs());
        }
        if (other.hasPongPercentComplete()) {
          setPongPercentComplete(other.getPongPercentComplete());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSequenceNo()) {
          
          return false;
        }
        if (!hasPingPayload()) {
          
          return false;
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tdmx.server.pcs.protobuf.PCSServer.Ping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tdmx.server.pcs.protobuf.PCSServer.Ping) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sequenceNo_ ;
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo + payload data must be echoed back
       * </pre>
       */
      public boolean hasSequenceNo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo + payload data must be echoed back
       * </pre>
       */
      public int getSequenceNo() {
        return sequenceNo_;
      }
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo + payload data must be echoed back
       * </pre>
       */
      public Builder setSequenceNo(int value) {
        bitField0_ |= 0x00000001;
        sequenceNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo + payload data must be echoed back
       * </pre>
       */
      public Builder clearSequenceNo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNo_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString pingPayload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes pingPayload = 2;</code>
       */
      public boolean hasPingPayload() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes pingPayload = 2;</code>
       */
      public com.google.protobuf.ByteString getPingPayload() {
        return pingPayload_;
      }
      /**
       * <code>required bytes pingPayload = 2;</code>
       */
      public Builder setPingPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pingPayload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes pingPayload = 2;</code>
       */
      public Builder clearPingPayload() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pingPayload_ = getDefaultInstance().getPingPayload();
        onChanged();
        return this;
      }

      private int pingDurationMs_ ;
      /**
       * <code>optional int32 pingDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the ping call at server ( prior to pong )
       * </pre>
       */
      public boolean hasPingDurationMs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 pingDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the ping call at server ( prior to pong )
       * </pre>
       */
      public int getPingDurationMs() {
        return pingDurationMs_;
      }
      /**
       * <code>optional int32 pingDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the ping call at server ( prior to pong )
       * </pre>
       */
      public Builder setPingDurationMs(int value) {
        bitField0_ |= 0x00000004;
        pingDurationMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pingDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the ping call at server ( prior to pong )
       * </pre>
       */
      public Builder clearPingDurationMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pingDurationMs_ = 0;
        onChanged();
        return this;
      }

      private boolean pingPercentComplete_ ;
      /**
       * <code>optional bool pingPercentComplete = 4;</code>
       *
       * <pre>
       * whether the server shall provide percent complete indication back to client during ping. 
       * </pre>
       */
      public boolean hasPingPercentComplete() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool pingPercentComplete = 4;</code>
       *
       * <pre>
       * whether the server shall provide percent complete indication back to client during ping. 
       * </pre>
       */
      public boolean getPingPercentComplete() {
        return pingPercentComplete_;
      }
      /**
       * <code>optional bool pingPercentComplete = 4;</code>
       *
       * <pre>
       * whether the server shall provide percent complete indication back to client during ping. 
       * </pre>
       */
      public Builder setPingPercentComplete(boolean value) {
        bitField0_ |= 0x00000008;
        pingPercentComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pingPercentComplete = 4;</code>
       *
       * <pre>
       * whether the server shall provide percent complete indication back to client during ping. 
       * </pre>
       */
      public Builder clearPingPercentComplete() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pingPercentComplete_ = false;
        onChanged();
        return this;
      }

      private boolean pongRequired_ ;
      /**
       * <code>optional bool pongRequired = 5;</code>
       *
       * <pre>
       * whether the ping call shall reverse pong the pinging client
       * </pre>
       */
      public boolean hasPongRequired() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool pongRequired = 5;</code>
       *
       * <pre>
       * whether the ping call shall reverse pong the pinging client
       * </pre>
       */
      public boolean getPongRequired() {
        return pongRequired_;
      }
      /**
       * <code>optional bool pongRequired = 5;</code>
       *
       * <pre>
       * whether the ping call shall reverse pong the pinging client
       * </pre>
       */
      public Builder setPongRequired(boolean value) {
        bitField0_ |= 0x00000010;
        pongRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pongRequired = 5;</code>
       *
       * <pre>
       * whether the ping call shall reverse pong the pinging client
       * </pre>
       */
      public Builder clearPongRequired() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pongRequired_ = false;
        onChanged();
        return this;
      }

      private boolean pongBlocking_ ;
      /**
       * <code>optional bool pongBlocking = 6;</code>
       *
       * <pre>
       * whether to call a clients blocking pong service or nonblocking pong service.
       * </pre>
       */
      public boolean hasPongBlocking() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool pongBlocking = 6;</code>
       *
       * <pre>
       * whether to call a clients blocking pong service or nonblocking pong service.
       * </pre>
       */
      public boolean getPongBlocking() {
        return pongBlocking_;
      }
      /**
       * <code>optional bool pongBlocking = 6;</code>
       *
       * <pre>
       * whether to call a clients blocking pong service or nonblocking pong service.
       * </pre>
       */
      public Builder setPongBlocking(boolean value) {
        bitField0_ |= 0x00000020;
        pongBlocking_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pongBlocking = 6;</code>
       *
       * <pre>
       * whether to call a clients blocking pong service or nonblocking pong service.
       * </pre>
       */
      public Builder clearPongBlocking() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pongBlocking_ = false;
        onChanged();
        return this;
      }

      private int pongDurationMs_ ;
      /**
       * <code>optional int32 pongDurationMs = 7;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public boolean hasPongDurationMs() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 pongDurationMs = 7;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public int getPongDurationMs() {
        return pongDurationMs_;
      }
      /**
       * <code>optional int32 pongDurationMs = 7;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public Builder setPongDurationMs(int value) {
        bitField0_ |= 0x00000040;
        pongDurationMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pongDurationMs = 7;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public Builder clearPongDurationMs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pongDurationMs_ = 0;
        onChanged();
        return this;
      }

      private int pongTimeoutMs_ ;
      /**
       * <code>optional int32 pongTimeoutMs = 8;</code>
       *
       * <pre>
       * the timeout of the pong call at the server
       * </pre>
       */
      public boolean hasPongTimeoutMs() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 pongTimeoutMs = 8;</code>
       *
       * <pre>
       * the timeout of the pong call at the server
       * </pre>
       */
      public int getPongTimeoutMs() {
        return pongTimeoutMs_;
      }
      /**
       * <code>optional int32 pongTimeoutMs = 8;</code>
       *
       * <pre>
       * the timeout of the pong call at the server
       * </pre>
       */
      public Builder setPongTimeoutMs(int value) {
        bitField0_ |= 0x00000080;
        pongTimeoutMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pongTimeoutMs = 8;</code>
       *
       * <pre>
       * the timeout of the pong call at the server
       * </pre>
       */
      public Builder clearPongTimeoutMs() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pongTimeoutMs_ = 0;
        onChanged();
        return this;
      }

      private boolean pongPercentComplete_ ;
      /**
       * <code>optional bool pongPercentComplete = 9;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong.
       * </pre>
       */
      public boolean hasPongPercentComplete() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool pongPercentComplete = 9;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong.
       * </pre>
       */
      public boolean getPongPercentComplete() {
        return pongPercentComplete_;
      }
      /**
       * <code>optional bool pongPercentComplete = 9;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong.
       * </pre>
       */
      public Builder setPongPercentComplete(boolean value) {
        bitField0_ |= 0x00000100;
        pongPercentComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pongPercentComplete = 9;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong.
       * </pre>
       */
      public Builder clearPongPercentComplete() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pongPercentComplete_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Ping)
    }

    static {
      defaultInstance = new Ping(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Ping)
  }

  public interface PongOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Pong)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Pong> {

    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo of the ping which requests pong
     * </pre>
     */
    boolean hasSequenceNo();
    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo of the ping which requests pong
     * </pre>
     */
    int getSequenceNo();

    /**
     * <code>required bytes pongData = 2;</code>
     *
     * <pre>
     * the pingPayload copied in the pong
     * </pre>
     */
    boolean hasPongData();
    /**
     * <code>required bytes pongData = 2;</code>
     *
     * <pre>
     * the pingPayload copied in the pong
     * </pre>
     */
    com.google.protobuf.ByteString getPongData();

    /**
     * <code>optional int32 pongDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    boolean hasPongDurationMs();
    /**
     * <code>optional int32 pongDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    int getPongDurationMs();

    /**
     * <code>optional bool pongPercentComplete = 4;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong. 
     * </pre>
     */
    boolean hasPongPercentComplete();
    /**
     * <code>optional bool pongPercentComplete = 4;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong. 
     * </pre>
     */
    boolean getPongPercentComplete();
  }
  /**
   * Protobuf type {@code Pong}
   */
  public static final class Pong extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Pong> implements
      // @@protoc_insertion_point(message_implements:Pong)
      PongOrBuilder {
    // Use Pong.newBuilder() to construct.
    private Pong(com.google.protobuf.GeneratedMessage.ExtendableBuilder<org.tdmx.server.pcs.protobuf.PCSServer.Pong, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Pong(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Pong defaultInstance;
    public static Pong getDefaultInstance() {
      return defaultInstance;
    }

    public Pong getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Pong(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceNo_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              pongData_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pongDurationMs_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pongPercentComplete_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Pong_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Pong_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tdmx.server.pcs.protobuf.PCSServer.Pong.class, org.tdmx.server.pcs.protobuf.PCSServer.Pong.Builder.class);
    }

    public static com.google.protobuf.Parser<Pong> PARSER =
        new com.google.protobuf.AbstractParser<Pong>() {
      public Pong parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pong(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Pong> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQUENCENO_FIELD_NUMBER = 1;
    private int sequenceNo_;
    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo of the ping which requests pong
     * </pre>
     */
    public boolean hasSequenceNo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sequenceNo = 1;</code>
     *
     * <pre>
     * sequenceNo of the ping which requests pong
     * </pre>
     */
    public int getSequenceNo() {
      return sequenceNo_;
    }

    public static final int PONGDATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString pongData_;
    /**
     * <code>required bytes pongData = 2;</code>
     *
     * <pre>
     * the pingPayload copied in the pong
     * </pre>
     */
    public boolean hasPongData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes pongData = 2;</code>
     *
     * <pre>
     * the pingPayload copied in the pong
     * </pre>
     */
    public com.google.protobuf.ByteString getPongData() {
      return pongData_;
    }

    public static final int PONGDURATIONMS_FIELD_NUMBER = 3;
    private int pongDurationMs_;
    /**
     * <code>optional int32 pongDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    public boolean hasPongDurationMs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 pongDurationMs = 3;</code>
     *
     * <pre>
     * the duration of the pong call at the client
     * </pre>
     */
    public int getPongDurationMs() {
      return pongDurationMs_;
    }

    public static final int PONGPERCENTCOMPLETE_FIELD_NUMBER = 4;
    private boolean pongPercentComplete_;
    /**
     * <code>optional bool pongPercentComplete = 4;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong. 
     * </pre>
     */
    public boolean hasPongPercentComplete() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool pongPercentComplete = 4;</code>
     *
     * <pre>
     * whether the client shall provide percent complete indication back to server during pong. 
     * </pre>
     */
    public boolean getPongPercentComplete() {
      return pongPercentComplete_;
    }

    private void initFields() {
      sequenceNo_ = 0;
      pongData_ = com.google.protobuf.ByteString.EMPTY;
      pongDurationMs_ = 0;
      pongPercentComplete_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSequenceNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPongData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.tdmx.server.pcs.protobuf.PCSServer.Pong>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sequenceNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, pongData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pongDurationMs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, pongPercentComplete_);
      }
      extensionWriter.writeUntil(1000, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sequenceNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, pongData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pongDurationMs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, pongPercentComplete_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Pong parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.tdmx.server.pcs.protobuf.PCSServer.Pong prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Pong}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.tdmx.server.pcs.protobuf.PCSServer.Pong, Builder> implements
        // @@protoc_insertion_point(builder_implements:Pong)
        org.tdmx.server.pcs.protobuf.PCSServer.PongOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Pong_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Pong_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tdmx.server.pcs.protobuf.PCSServer.Pong.class, org.tdmx.server.pcs.protobuf.PCSServer.Pong.Builder.class);
      }

      // Construct using org.tdmx.server.pcs.protobuf.PCSServer.Pong.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pongData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        pongDurationMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        pongPercentComplete_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Pong_descriptor;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Pong getDefaultInstanceForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance();
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Pong build() {
        org.tdmx.server.pcs.protobuf.PCSServer.Pong result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Pong buildPartial() {
        org.tdmx.server.pcs.protobuf.PCSServer.Pong result = new org.tdmx.server.pcs.protobuf.PCSServer.Pong(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceNo_ = sequenceNo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pongData_ = pongData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pongDurationMs_ = pongDurationMs_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pongPercentComplete_ = pongPercentComplete_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tdmx.server.pcs.protobuf.PCSServer.Pong) {
          return mergeFrom((org.tdmx.server.pcs.protobuf.PCSServer.Pong)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tdmx.server.pcs.protobuf.PCSServer.Pong other) {
        if (other == org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance()) return this;
        if (other.hasSequenceNo()) {
          setSequenceNo(other.getSequenceNo());
        }
        if (other.hasPongData()) {
          setPongData(other.getPongData());
        }
        if (other.hasPongDurationMs()) {
          setPongDurationMs(other.getPongDurationMs());
        }
        if (other.hasPongPercentComplete()) {
          setPongPercentComplete(other.getPongPercentComplete());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSequenceNo()) {
          
          return false;
        }
        if (!hasPongData()) {
          
          return false;
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tdmx.server.pcs.protobuf.PCSServer.Pong parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tdmx.server.pcs.protobuf.PCSServer.Pong) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sequenceNo_ ;
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo of the ping which requests pong
       * </pre>
       */
      public boolean hasSequenceNo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo of the ping which requests pong
       * </pre>
       */
      public int getSequenceNo() {
        return sequenceNo_;
      }
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo of the ping which requests pong
       * </pre>
       */
      public Builder setSequenceNo(int value) {
        bitField0_ |= 0x00000001;
        sequenceNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sequenceNo = 1;</code>
       *
       * <pre>
       * sequenceNo of the ping which requests pong
       * </pre>
       */
      public Builder clearSequenceNo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNo_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString pongData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes pongData = 2;</code>
       *
       * <pre>
       * the pingPayload copied in the pong
       * </pre>
       */
      public boolean hasPongData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes pongData = 2;</code>
       *
       * <pre>
       * the pingPayload copied in the pong
       * </pre>
       */
      public com.google.protobuf.ByteString getPongData() {
        return pongData_;
      }
      /**
       * <code>required bytes pongData = 2;</code>
       *
       * <pre>
       * the pingPayload copied in the pong
       * </pre>
       */
      public Builder setPongData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pongData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes pongData = 2;</code>
       *
       * <pre>
       * the pingPayload copied in the pong
       * </pre>
       */
      public Builder clearPongData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pongData_ = getDefaultInstance().getPongData();
        onChanged();
        return this;
      }

      private int pongDurationMs_ ;
      /**
       * <code>optional int32 pongDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public boolean hasPongDurationMs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 pongDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public int getPongDurationMs() {
        return pongDurationMs_;
      }
      /**
       * <code>optional int32 pongDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public Builder setPongDurationMs(int value) {
        bitField0_ |= 0x00000004;
        pongDurationMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pongDurationMs = 3;</code>
       *
       * <pre>
       * the duration of the pong call at the client
       * </pre>
       */
      public Builder clearPongDurationMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pongDurationMs_ = 0;
        onChanged();
        return this;
      }

      private boolean pongPercentComplete_ ;
      /**
       * <code>optional bool pongPercentComplete = 4;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong. 
       * </pre>
       */
      public boolean hasPongPercentComplete() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool pongPercentComplete = 4;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong. 
       * </pre>
       */
      public boolean getPongPercentComplete() {
        return pongPercentComplete_;
      }
      /**
       * <code>optional bool pongPercentComplete = 4;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong. 
       * </pre>
       */
      public Builder setPongPercentComplete(boolean value) {
        bitField0_ |= 0x00000008;
        pongPercentComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pongPercentComplete = 4;</code>
       *
       * <pre>
       * whether the client shall provide percent complete indication back to server during pong. 
       * </pre>
       */
      public Builder clearPongPercentComplete() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pongPercentComplete_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Pong)
    }

    static {
      defaultInstance = new Pong(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Pong)
  }

  public interface PercentCompleteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PercentComplete)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float percentageComplete = 1;</code>
     */
    boolean hasPercentageComplete();
    /**
     * <code>required float percentageComplete = 1;</code>
     */
    float getPercentageComplete();

    /**
     * <code>optional int32 sequenceNo = 2;</code>
     *
     * <pre>
     * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
     * </pre>
     */
    boolean hasSequenceNo();
    /**
     * <code>optional int32 sequenceNo = 2;</code>
     *
     * <pre>
     * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
     * </pre>
     */
    int getSequenceNo();

    /**
     * <code>optional .PercentComplete.OperationName op = 3;</code>
     *
     * <pre>
     * to validate
     * </pre>
     */
    boolean hasOp();
    /**
     * <code>optional .PercentComplete.OperationName op = 3;</code>
     *
     * <pre>
     * to validate
     * </pre>
     */
    org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName getOp();
  }
  /**
   * Protobuf type {@code PercentComplete}
   */
  public static final class PercentComplete extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PercentComplete)
      PercentCompleteOrBuilder {
    // Use PercentComplete.newBuilder() to construct.
    private PercentComplete(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PercentComplete(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PercentComplete defaultInstance;
    public static PercentComplete getDefaultInstance() {
      return defaultInstance;
    }

    public PercentComplete getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PercentComplete(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              percentageComplete_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sequenceNo_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName value = org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                op_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_PercentComplete_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_PercentComplete_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.class, org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.Builder.class);
    }

    public static com.google.protobuf.Parser<PercentComplete> PARSER =
        new com.google.protobuf.AbstractParser<PercentComplete>() {
      public PercentComplete parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PercentComplete(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PercentComplete> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code PercentComplete.OperationName}
     */
    public enum OperationName
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PING = 0;</code>
       *
       * <pre>
       * percent complete relates to a ping
       * </pre>
       */
      PING(0, 0),
      /**
       * <code>PONG = 1;</code>
       */
      PONG(1, 1),
      ;

      /**
       * <code>PING = 0;</code>
       *
       * <pre>
       * percent complete relates to a ping
       * </pre>
       */
      public static final int PING_VALUE = 0;
      /**
       * <code>PONG = 1;</code>
       */
      public static final int PONG_VALUE = 1;


      public final int getNumber() { return value; }

      public static OperationName valueOf(int value) {
        switch (value) {
          case 0: return PING;
          case 1: return PONG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OperationName>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<OperationName>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OperationName>() {
              public OperationName findValueByNumber(int number) {
                return OperationName.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.getDescriptor().getEnumTypes().get(0);
      }

      private static final OperationName[] VALUES = values();

      public static OperationName valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private OperationName(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PercentComplete.OperationName)
    }

    private int bitField0_;
    public static final int PERCENTAGECOMPLETE_FIELD_NUMBER = 1;
    private float percentageComplete_;
    /**
     * <code>required float percentageComplete = 1;</code>
     */
    public boolean hasPercentageComplete() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float percentageComplete = 1;</code>
     */
    public float getPercentageComplete() {
      return percentageComplete_;
    }

    public static final int SEQUENCENO_FIELD_NUMBER = 2;
    private int sequenceNo_;
    /**
     * <code>optional int32 sequenceNo = 2;</code>
     *
     * <pre>
     * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
     * </pre>
     */
    public boolean hasSequenceNo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sequenceNo = 2;</code>
     *
     * <pre>
     * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
     * </pre>
     */
    public int getSequenceNo() {
      return sequenceNo_;
    }

    public static final int OP_FIELD_NUMBER = 3;
    private org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName op_;
    /**
     * <code>optional .PercentComplete.OperationName op = 3;</code>
     *
     * <pre>
     * to validate
     * </pre>
     */
    public boolean hasOp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PercentComplete.OperationName op = 3;</code>
     *
     * <pre>
     * to validate
     * </pre>
     */
    public org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName getOp() {
      return op_;
    }

    private void initFields() {
      percentageComplete_ = 0F;
      sequenceNo_ = 0;
      op_ = org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName.PING;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPercentageComplete()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, percentageComplete_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sequenceNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, op_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, percentageComplete_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sequenceNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, op_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PercentComplete}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PercentComplete)
        org.tdmx.server.pcs.protobuf.PCSServer.PercentCompleteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_PercentComplete_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_PercentComplete_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.class, org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.Builder.class);
      }

      // Construct using org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        percentageComplete_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        op_ = org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName.PING;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_PercentComplete_descriptor;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete getDefaultInstanceForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.getDefaultInstance();
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete build() {
        org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete buildPartial() {
        org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete result = new org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.percentageComplete_ = percentageComplete_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sequenceNo_ = sequenceNo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.op_ = op_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete) {
          return mergeFrom((org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete other) {
        if (other == org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.getDefaultInstance()) return this;
        if (other.hasPercentageComplete()) {
          setPercentageComplete(other.getPercentageComplete());
        }
        if (other.hasSequenceNo()) {
          setSequenceNo(other.getSequenceNo());
        }
        if (other.hasOp()) {
          setOp(other.getOp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPercentageComplete()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float percentageComplete_ ;
      /**
       * <code>required float percentageComplete = 1;</code>
       */
      public boolean hasPercentageComplete() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float percentageComplete = 1;</code>
       */
      public float getPercentageComplete() {
        return percentageComplete_;
      }
      /**
       * <code>required float percentageComplete = 1;</code>
       */
      public Builder setPercentageComplete(float value) {
        bitField0_ |= 0x00000001;
        percentageComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float percentageComplete = 1;</code>
       */
      public Builder clearPercentageComplete() {
        bitField0_ = (bitField0_ & ~0x00000001);
        percentageComplete_ = 0F;
        onChanged();
        return this;
      }

      private int sequenceNo_ ;
      /**
       * <code>optional int32 sequenceNo = 2;</code>
       *
       * <pre>
       * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
       * </pre>
       */
      public boolean hasSequenceNo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sequenceNo = 2;</code>
       *
       * <pre>
       * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
       * </pre>
       */
      public int getSequenceNo() {
        return sequenceNo_;
      }
      /**
       * <code>optional int32 sequenceNo = 2;</code>
       *
       * <pre>
       * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
       * </pre>
       */
      public Builder setSequenceNo(int value) {
        bitField0_ |= 0x00000002;
        sequenceNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequenceNo = 2;</code>
       *
       * <pre>
       * to which ping or pong sequenceNo does percent complete this apply. ( used for validation )
       * </pre>
       */
      public Builder clearSequenceNo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNo_ = 0;
        onChanged();
        return this;
      }

      private org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName op_ = org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName.PING;
      /**
       * <code>optional .PercentComplete.OperationName op = 3;</code>
       *
       * <pre>
       * to validate
       * </pre>
       */
      public boolean hasOp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PercentComplete.OperationName op = 3;</code>
       *
       * <pre>
       * to validate
       * </pre>
       */
      public org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName getOp() {
        return op_;
      }
      /**
       * <code>optional .PercentComplete.OperationName op = 3;</code>
       *
       * <pre>
       * to validate
       * </pre>
       */
      public Builder setOp(org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        op_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PercentComplete.OperationName op = 3;</code>
       *
       * <pre>
       * to validate
       * </pre>
       */
      public Builder clearOp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        op_ = org.tdmx.server.pcs.protobuf.PCSServer.PercentComplete.OperationName.PING;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PercentComplete)
    }

    static {
      defaultInstance = new PercentComplete(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PercentComplete)
  }

  public interface StatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Status)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>required string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>required string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code Status}
   */
  public static final class Status extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Status)
      StatusOrBuilder {
    // Use Status.newBuilder() to construct.
    private Status(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Status(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Status defaultInstance;
    public static Status getDefaultInstance() {
      return defaultInstance;
    }

    public Status getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Status(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Status_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Status_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tdmx.server.pcs.protobuf.PCSServer.Status.class, org.tdmx.server.pcs.protobuf.PCSServer.Status.Builder.class);
    }

    public static com.google.protobuf.Parser<Status> PARSER =
        new com.google.protobuf.AbstractParser<Status>() {
      public Status parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Status(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Status> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    /**
     * <code>required string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.tdmx.server.pcs.protobuf.PCSServer.Status parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.tdmx.server.pcs.protobuf.PCSServer.Status prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Status}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Status)
        org.tdmx.server.pcs.protobuf.PCSServer.StatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Status_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Status_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tdmx.server.pcs.protobuf.PCSServer.Status.class, org.tdmx.server.pcs.protobuf.PCSServer.Status.Builder.class);
      }

      // Construct using org.tdmx.server.pcs.protobuf.PCSServer.Status.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.internal_static_Status_descriptor;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Status getDefaultInstanceForType() {
        return org.tdmx.server.pcs.protobuf.PCSServer.Status.getDefaultInstance();
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Status build() {
        org.tdmx.server.pcs.protobuf.PCSServer.Status result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tdmx.server.pcs.protobuf.PCSServer.Status buildPartial() {
        org.tdmx.server.pcs.protobuf.PCSServer.Status result = new org.tdmx.server.pcs.protobuf.PCSServer.Status(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tdmx.server.pcs.protobuf.PCSServer.Status) {
          return mergeFrom((org.tdmx.server.pcs.protobuf.PCSServer.Status)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tdmx.server.pcs.protobuf.PCSServer.Status other) {
        if (other == org.tdmx.server.pcs.protobuf.PCSServer.Status.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tdmx.server.pcs.protobuf.PCSServer.Status parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tdmx.server.pcs.protobuf.PCSServer.Status) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <code>required string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>required string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Status)
    }

    static {
      defaultInstance = new Status(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Status)
  }

  /**
   * Protobuf service {@code BlockingPingService}
   *
   * <pre>
   * in order to demonstrate simultaneously the serving of synchronous
   * and asynchronous services, we need to give the "same" service different
   * names.
   * </pre>
   */
  public static abstract class BlockingPingService
      implements com.google.protobuf.Service {
    protected BlockingPingService() {}

    public interface Interface {
      /**
       * <code>rpc ping(.Ping) returns (.Pong);</code>
       */
      public abstract void ping(
          com.google.protobuf.RpcController controller,
          org.tdmx.server.pcs.protobuf.PCSServer.Ping request,
          com.google.protobuf.RpcCallback<org.tdmx.server.pcs.protobuf.PCSServer.Pong> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new BlockingPingService() {
        @java.lang.Override
        public  void ping(
            com.google.protobuf.RpcController controller,
            org.tdmx.server.pcs.protobuf.PCSServer.Ping request,
            com.google.protobuf.RpcCallback<org.tdmx.server.pcs.protobuf.PCSServer.Pong> done) {
          impl.ping(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.ping(controller, (org.tdmx.server.pcs.protobuf.PCSServer.Ping)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.tdmx.server.pcs.protobuf.PCSServer.Ping.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc ping(.Ping) returns (.Pong);</code>
     */
    public abstract void ping(
        com.google.protobuf.RpcController controller,
        org.tdmx.server.pcs.protobuf.PCSServer.Ping request,
        com.google.protobuf.RpcCallback<org.tdmx.server.pcs.protobuf.PCSServer.Pong> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.tdmx.server.pcs.protobuf.PCSServer.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.ping(controller, (org.tdmx.server.pcs.protobuf.PCSServer.Ping)request,
            com.google.protobuf.RpcUtil.<org.tdmx.server.pcs.protobuf.PCSServer.Pong>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.tdmx.server.pcs.protobuf.PCSServer.Ping.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.tdmx.server.pcs.protobuf.PCSServer.BlockingPingService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void ping(
          com.google.protobuf.RpcController controller,
          org.tdmx.server.pcs.protobuf.PCSServer.Ping request,
          com.google.protobuf.RpcCallback<org.tdmx.server.pcs.protobuf.PCSServer.Pong> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.tdmx.server.pcs.protobuf.PCSServer.Pong.class,
            org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.tdmx.server.pcs.protobuf.PCSServer.Pong ping(
          com.google.protobuf.RpcController controller,
          org.tdmx.server.pcs.protobuf.PCSServer.Ping request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.tdmx.server.pcs.protobuf.PCSServer.Pong ping(
          com.google.protobuf.RpcController controller,
          org.tdmx.server.pcs.protobuf.PCSServer.Ping request)
          throws com.google.protobuf.ServiceException {
        return (org.tdmx.server.pcs.protobuf.PCSServer.Pong) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.tdmx.server.pcs.protobuf.PCSServer.Pong.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:BlockingPingService)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Ping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Ping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Pong_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Pong_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PercentComplete_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PercentComplete_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Status_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Status_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020pcs-server.proto\"\343\001\n\004Ping\022\022\n\nsequenceN" +
      "o\030\001 \002(\005\022\023\n\013pingPayload\030\002 \002(\014\022\026\n\016pingDura" +
      "tionMs\030\003 \001(\005\022\033\n\023pingPercentComplete\030\004 \001(" +
      "\010\022\024\n\014pongRequired\030\005 \001(\010\022\024\n\014pongBlocking\030" +
      "\006 \001(\010\022\026\n\016pongDurationMs\030\007 \001(\005\022\025\n\rpongTim" +
      "eoutMs\030\010 \001(\005\022\033\n\023pongPercentComplete\030\t \001(" +
      "\010*\005\010d\020\350\007\"h\n\004Pong\022\022\n\nsequenceNo\030\001 \002(\005\022\020\n\010" +
      "pongData\030\002 \002(\014\022\026\n\016pongDurationMs\030\003 \001(\005\022\033" +
      "\n\023pongPercentComplete\030\004 \001(\010*\005\010d\020\350\007\"\222\001\n\017P" +
      "ercentComplete\022\032\n\022percentageComplete\030\001 \002",
      "(\002\022\022\n\nsequenceNo\030\002 \001(\005\022*\n\002op\030\003 \001(\0162\036.Per" +
      "centComplete.OperationName\"#\n\rOperationN" +
      "ame\022\010\n\004PING\020\000\022\010\n\004PONG\020\001\"\031\n\006Status\022\017\n\007mes" +
      "sage\030\001 \002(\t2+\n\023BlockingPingService\022\024\n\004pin" +
      "g\022\005.Ping\032\005.PongB,\n\034org.tdmx.server.pcs.p" +
      "rotobufB\tPCSServer\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Ping_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Ping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Ping_descriptor,
        new java.lang.String[] { "SequenceNo", "PingPayload", "PingDurationMs", "PingPercentComplete", "PongRequired", "PongBlocking", "PongDurationMs", "PongTimeoutMs", "PongPercentComplete", });
    internal_static_Pong_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Pong_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Pong_descriptor,
        new java.lang.String[] { "SequenceNo", "PongData", "PongDurationMs", "PongPercentComplete", });
    internal_static_PercentComplete_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_PercentComplete_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PercentComplete_descriptor,
        new java.lang.String[] { "PercentageComplete", "SequenceNo", "Op", });
    internal_static_Status_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Status_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Status_descriptor,
        new java.lang.String[] { "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
